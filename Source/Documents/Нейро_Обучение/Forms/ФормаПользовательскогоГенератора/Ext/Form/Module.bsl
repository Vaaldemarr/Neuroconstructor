&НаКлиенте
Процедура СообщитьОбОшибке(Поле, Текст)
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Текст;
	Сообщение.Поле = Поле;
	Сообщение.Сообщить();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Имя") Тогда
		Имя=Параметры.Имя;
		ИмяПриОткрытии=Параметры.Имя;
	КонецЕсли;
	Если Параметры.Свойство("МассивСлоев") Тогда
		Для Каждого СтруктураДопПараметр Из Параметры.МассивСлоев Цикл
			СтрокаДоп = ДополнительныеПараметры.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДоп, СтруктураДопПараметр);
			//Элементы.Масштабировать.СписокВыбора.Добавить(ИмяСлоя);
		КонецЦикла;
	КонецЕсли;
	Если Параметры.Свойство("ПараметрыГенератора") Тогда
		Если Параметры.ПараметрыГенератора<>Неопределено Тогда
			Генератор                          = Параметры.ПараметрыГенератора.Генератор;
			ИндексНачало                       = Параметры.ПараметрыГенератора.ИндексНачало;
			ИндексОкончание                    = Параметры.ПараметрыГенератора.ИндексОкончание;
			ИндексНачалоПроверка               = Параметры.ПараметрыГенератора.ИндексНачалоПроверка;
			ИндексОкончаниеПроверка            = Параметры.ПараметрыГенератора.ИндексОкончаниеПроверка;
			Перемешивать                       = Параметры.ПараметрыГенератора.Перемешивать;
			РазмерПакета                       = Параметры.ПараметрыГенератора.РазмерПакета;
			РазмерПакетаПроверка               = Параметры.ПараметрыГенератора.РазмерПакетаПроверка;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НовыйПараметр = Новый ПараметрВыбора("Отбор.Вид", ПредопределенноеЗначение("Перечисление.Нейро_ВидыПользовательскогоГенератора.Частный"));
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	Элементы.Генератор.ПараметрыВыбора = НовыеПараметры;
	
	Если ДополнительныеПараметры.Количество()>0 Тогда
		Элементы.ГруппаДополнительныеПараметры.Показать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГенераторПриИзменении(Элемент)
	ДополнительныеПараметры.Очистить();
	ЗаполнитьДопПараметрыНаСервере();
	Если ДополнительныеПараметры.Количество()>0 Тогда
		Элементы.ГруппаДополнительныеПараметры.Показать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДопПараметрыНаСервере()
	ЕстьДоп = Ложь;
	Для Каждого СтрокаТЧ Из Генератор.Параметры Цикл
		Если СтрокаТЧ.Вид = Перечисления.Нейро_ПараметрыГенератора.Дополнительный Тогда
			НоваяСтрока = ДополнительныеПараметры.Добавить();
			НоваяСтрока.Идентификатор = СтрокаТЧ.Имя;
			НоваяСтрока.Тип = СтрокаТЧ.Тип;
			//НоваяСтрока.Значение = СтрокаТЧ.;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Если СокрЛП(Имя)="" Тогда
		СообщитьОбОшибке("Имя", "Не задано имя генератора!");
		Возврат
	КонецЕсли;
	Результат=Новый Структура("Имя, ПараметрыГенератора",ИмяПриОткрытии,ПараметрыГенератораВСтруктуру());
	Закрыть(Результат);
КонецПроцедуры

&НаКлиенте
Функция ПараметрыГенератораВСтруктуру()
	Результат = Новый Структура;
	Результат.Вставить("Имя", Имя);
	Результат.Вставить("Генератор", Генератор);
	Результат.Вставить("ИндексНачало", ИндексНачало);
	Результат.Вставить("ИндексОкончание", ИндексОкончание);
	Результат.Вставить("ИндексНачалоПроверка", ИндексНачалоПроверка);
	Результат.Вставить("ИндексОкончаниеПроверка", ИндексОкончаниеПроверка);
	Результат.Вставить("РазмерПакета", РазмерПакета);
	Результат.Вставить("РазмерПакетаПроверка", РазмерПакетаПроверка);
	Результат.Вставить("Перемешивать", Перемешивать);
	
	ДопПараметры = Новый Массив;
	Для Каждого СтрокаТаб Из ДополнительныеПараметры Цикл
		СтруктураПараметра = Новый Структура("Идентификатор,Тип,Значение");
		СтруктураПараметра.Идентификатор = СтрокаТаб.Идентификатор;
		СтруктураПараметра.Тип     = СтрокаТаб.Тип;
		СтруктураПараметра.Значение      = СтрокаТаб.Значение;
		ДопПараметры.Добавить(СтруктураПараметра);
	КонецЦикла;
	Результат.Вставить("ДопПараметры", ДопПараметры);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ДополнительныеПараметрыПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущиеДанные=Неопределено Тогда Возврат КонецЕсли;
	Если Элемент.ТекущийЭлемент.Имя="ДополнительныеПараметрыЗначение" Тогда
		ОписаниеТипа = Нейро_ОбщийМодуль.ПолучитьОписаниеТипаИзПеречисления(Элемент.ТекущиеДанные.Тип);
		Если ОписаниеТипа<>Неопределено Тогда
			Элемент.ТекущийЭлемент.ОграничениеТипа = ОписаниеТипа;
		Иначе
			Элемент.ТекущийЭлемент.ОграничениеТипа = Новый ОписаниеТипов();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПараметрыПередУдалением(Элемент, Отказ)
	Отказ=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПараметрыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ=Истина;
КонецПроцедуры
