&НаСервере
Функция СформироватьТекстПрограммы(Объект, Параметры) Экспорт
	Если Параметры.ИдентификаторFromJSON = "" Тогда
		ИдентификаторFromJSON = "keras.preprocessing.text.text.tokenizer_from_json";
	Иначе
		ИдентификаторFromJSON = Параметры.ИдентификаторFromJSON;
	КонецЕсли;
	
	ТекстПрограммы=
	Нейро_ОбщийМодуль.ИдFromKeras(
	"import sys
	|from keras.preprocessing.text import Tokenizer
	|sys.stderr = open(u'"+СтрЗаменить(Параметры.ФайлОшибок,"\","\\")+"', 'w')
	|sys.stdout = open(u'"+СтрЗаменить(Параметры.ФайлСообщений,"\","\\")+"', 'w')
	|import numpy as np
	|import json
	|");
	Если Объект.Разделитель="" Или Объект.Разделитель=" " Тогда
		ТекстРазделитель = ""
	Иначе
		ТекстРазделитель = ", delimiter='"+Объект.Разделитель+"'";
	КонецЕсли;
	Если Объект.ПропуститьСтрок=0 Тогда
		ТекстПропуститьСтрок = ""
	Иначе
		ТекстПропуститьСтрок = ", skiprows="+СтрЗаменить(СокрЛП(Объект.ПропуститьСтрок),Символы.НПП,"");
	КонецЕсли;
	//ТекстТипДанных=", dtype=np.object";
	//ТекстПрограммы=ТекстПрограммы+
	//"src_array = np.loadtxt(u'"+СтрЗаменить(Объект.ПутьКФайлу,"\","\\")+"'"+ТекстТипДанных+ТекстРазделитель+ТекстПропуститьСтрок+")
	//|";
	
	Для Каждого СтрокаТЧ Из Объект.ВыходныеФайлы Цикл
		ТекстСписок="";
		Колонки = СтрРазделить(СтрокаТЧ.Колонки,",",Ложь);
		Для Каждого Номер Из Колонки Цикл
			Если ТекстСписок<>"" Тогда ТекстСписок=ТекстСписок+"," КонецЕсли;
			ТекстСписок=ТекстСписок+СтрЗаменить(СокрЛП(Номер),Символы.НПП,"")
		КонецЦикла;
		ТекстКолонки="";
		Если Колонки.Количество()=1 Тогда
			ТекстКолонки=", usecols="+ТекстСписок;
		Иначе
			ТекстКолонки=", usecols=("+ТекстСписок+")";
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТЧ.ТипДанных) Тогда
			ТекстТипДанных=", dtype=np."+Нейро_ОбщийМодуль.ПолучитьКомментарийИзЗначенияПеречисления("Нейро_ТипыNumPy", СтрокаТЧ.ТипДанных);
		Иначе
			ТекстТипДанных=", dtype=np.object";
		КонецЕсли;
		ТекстПрограммы=ТекстПрограммы+
		"dst_array = np.loadtxt(u'"+СтрЗаменить(Объект.ПутьКФайлу,"\","\\")+"'"+ТекстТипДанных+ТекстРазделитель+ТекстПропуститьСтрок+ТекстКолонки+")
		|";
		//ТекстПрограммы=ТекстПрограммы+
		//"list_cols = ["+ТекстСписок+"]
		//|dst_array=src_array[:,list_cols]
		//|";
		//Если ЗначениеЗаполнено(СтрокаТЧ.ТипДанных) Тогда
		//	ТекстТипДанных=Нейро_ОбщийМодуль.ПолучитьКомментарийИзЗначенияПеречисления("Нейро_ТипыNumPy", СтрокаТЧ.ТипДанных);
		//	ТекстПрограммы=ТекстПрограммы+
		//	"dst_array = dst_array.astype(np."+ТекстТипДанных+")
		//	|";
		//КонецЕсли;
		Если СтрокаТЧ.ПутьКСловарю<>"" Тогда
			Если СтрокаТЧ.ТипДанных<>Неопределено Тогда
				Формат=Нейро_ОбщийМодуль.ПолучитьКороткийФорматNumpyПоТипу(СтрокаТЧ.ТипДанных);
			Иначе
				Формат="%s";
			КонецЕсли;
			
			ТекстПрограммы=ТекстПрограммы+
			"np.savetxt(u'"+СтрЗаменить(СтрокаТЧ.ПутьКФайлу,"\","\\")+"', dst_array"+?(Формат="","",", fmt='"+Формат+"'")+", delimiter='"+СтрокаТЧ.Соединитель+"')
			|";
			Если СтрокаТЧ.СоздаватьСловарь Тогда
				ТекстПрограммы=ТекстПрограммы+
				"f = open(u'"+СтрЗаменить(СтрокаТЧ.ПутьКФайлу,"\","\\")+"')
				|data = f.read()
				|f.close()
				|texts = data.split('\n')
				|if texts[-1]=='':
				|    texts=texts[:-1]
				|";
				Если СтрокаТЧ.Соединитель<>" " Тогда 
					ТекстПараметры="split='"+СтрокаТЧ.Соединитель+"'"
				Иначе
					ТекстПараметры="";
				КонецЕсли;
				ТекстПрограммы=ТекстПрограммы+
				"tokenizer = Tokenizer("+ТекстПараметры+")
				|tokenizer.fit_on_texts(texts)
				|tokenizer_json = tokenizer.to_json()
				|with open(u'"+СтрЗаменить(СтрокаТЧ.ПутьКСловарю,"\","\\")+"', 'w', encoding='utf-8') as f:
			    |    f.write(json.dumps(tokenizer_json, ensure_ascii=False))
			    |";
			КонецЕсли;
		Иначе
			ТекстПрограммы=ТекстПрограммы+
			"np.save(u'"+СтрЗаменить(СтрокаТЧ.ПутьКФайлу,"\","\\")+"', dst_array)
			|";
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТекстПрограммы;
КонецФункции
