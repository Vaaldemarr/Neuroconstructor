
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтруктураМодели=Параметры.СтруктураМодели;
	СтруктураМоделиПреобразованная=Параметры.СтруктураПреобразованная;
	Путь = Параметры.Путь;
	ТекстМоделиJSON = Параметры.ТекстМоделиJSON;
	Если Параметры.СтруктураМодели.Свойство("name") Тогда //Модель
		ИмяМодели = Параметры.СтруктураМодели.name;
		Заголовок = Параметры.СтруктураМодели.name;
		ЗаполнитьВходящие(Параметры.СтруктураМодели.inbound_nodes);
		Нейро_СозданиеМоделиНаСервере.ПеребратьМодельИзСтруктурыJSON(ЭтотОбъект, Параметры.СтруктураМодели.config);
	ИначеЕсли Параметры.СтруктураМодели.config.Свойство("name") Тогда //Вложенный слой
		ВложенныйСлой=Истина;
		ИмяМодели = Параметры.СтруктураМодели.config.name;
		Заголовок = Параметры.СтруктураМодели.config.name;
		Нейро_СозданиеМоделиНаСервере.ПеребратьСлойИзСтруктурыJSON(ЭтотОбъект, Параметры.СтруктураМодели);
	КонецЕсли; 
	ЭтаФорма.ЗакрыватьПриВыборе=Ложь;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВходящие(Массив)
	Для Каждого Элемент Из Массив Цикл
		Для Каждого Элемент1 Из Элемент Цикл
			Для Каждого Значение Из Элемент1 Цикл
				Если ТипЗнч(Значение)=Тип("Строка") Тогда
					ВходыМодели.Добавить(Значение);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СлоиПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущийЭлемент=Элементы.СлоиТренируемый Тогда Возврат КонецЕсли;
	Если Не СтруктураМодели.config.Свойство("layers") Тогда Отказ = Истина; Возврат КонецЕсли;
	СтруктВложеннойМодели=Неопределено;
	Для Каждого СтруктураКласса Из СтруктураМодели.config.layers Цикл
		Если СтруктураКласса.name=Элементы.Слои.ТекущиеДанные.Имя И (СтруктураКласса.class_name="Model" Или ЭтоОболочка(СтруктураКласса.class_name)) Тогда
			СтруктВложеннойМодели=СтруктураКласса; Прервать
		КонецЕсли;
	КонецЦикла;
	Если СтруктВложеннойМодели=Неопределено Тогда 
		Если Элемент.ТекущийЭлемент=Элементы.СлоиТипСлоя Тогда
			СлоиСсылка = ОпределитьСлойПоТипу(Элементы.Слои.ТекущиеДанные.ТипСлоя);
			Если Не СлоиСсылка.Пустая() Тогда
				парам = новый Структура;
				парам.вставить("Ключ",СлоиСсылка);
				ОткрытьФорму("Справочник.Нейро_Слои.ФормаОбъекта",парам);
			КонецЕсли;
		КонецЕсли;
		Отказ = Истина; Возврат 
	КонецЕсли;
	СтруктураТекущегоСлоя = Неопределено;
	Для Каждого СтруктураСлоя Из СтруктураМоделиПреобразованная.Параметры.Слои Цикл
		Если СтруктураСлоя.Имя = Элементы.Слои.ТекущиеДанные.Имя Тогда
			СтруктураТекущегоСлоя = СтруктураСлоя;
			Прервать
		КонецЕсли;
	КонецЦикла;
	Отказ = Истина;
	ПараметрыД = Новый Структура;
	Если ЭтоОболочка(СтруктВложеннойМодели.class_name) Тогда
		ПараметрыД.Вставить("СтруктураМодели", СтруктВложеннойМодели.config.layer);
		ПараметрыД.Вставить("СтруктураПреобразованная", СтруктураТекущегоСлоя);
		ПутьКСлою=Путь+?(Путь="","","/")+СтруктураМодели.name;
		ПутьКСлою=ПутьКСлою+?(ПутьКСлою="","","/")+СтруктВложеннойМодели.name;
		ПараметрыД.Вставить("Путь", ПутьКСлою);
	Иначе
		ПараметрыД.Вставить("СтруктураМодели", СтруктВложеннойМодели);
		ПараметрыД.Вставить("СтруктураПреобразованная", СтруктураТекущегоСлоя);
		ПараметрыД.Вставить("Путь", Путь+?(Путь="","","/")+СтруктураМодели.name);
	КонецЕсли;
	Если Модифицированность Тогда
		ПараметрыД.Вставить("ТекстМоделиJSON", СформироватьСтрокуJSONИзДереваНаСервере());
	Иначе
		ПараметрыД.Вставить("ТекстМоделиJSON", ТекстМоделиJSON);
	КонецЕсли;
	ОткрытьФорму("Справочник.Нейро_ПодключенныеМодели.Форма.ФормаПросмотраМодели", ПараметрыД, ЭтотОбъект, Истина, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаСервере
Функция ОпределитьСлойПоТипу(ТипСлоя)
	Возврат Справочники.Нейро_Слои.НайтиПоРеквизиту("ТипСлоя", ТипСлоя);
КонецФункции

&НаКлиенте
Функция ЭтоОболочка(ИдСлоя) Экспорт
	//ТипыСлоевОболочки=Нейро_ОбщийМодуль.ПолучитьТипыСлояПоВидуСлоя(Перечисления.Нейро_ВидыСлоев.LayerWrappers);
	ТипыСлоевОболочки=Нейро_ОбщийМодуль.ПолучитьТипыСлояПоВидуСлоя(ПредопределенноеЗначение("Перечисление.Нейро_ВидыСлоев.LayerWrappers"));
	
	ЭтоОболочка=Ложь;
	Для Каждого Элемент Из ТипыСлоевОболочки Цикл
		Если ИдСлоя=Нейро_ОбщийМодуль.ПолучитьИмяИзЗначенияПеречисления("Нейро_ТипыСлоев", Элемент.Значение) Тогда
			Возврат Истина
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь
КонецФункции

&НаКлиенте
Процедура Группа1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	СообщениеВладельцу = Новый Структура;
	СообщениеВладельцу.Вставить("Сообщение", "Сменить текущую страницу");
	СообщениеВладельцу.Вставить("ИмяСтраницы", ТекущаяСтраница.Имя);
	ОповеститьОВыборе(СообщениеВладельцу);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="" Тогда
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение)=Тип("Структура") Тогда
		ТекстСообщения=Неопределено;
		Если ВыбранноеЗначение.Свойство("Сообщение", ТекстСообщения) Тогда
			Если ТекстСообщения = "Сменить текущую страницу" Тогда
				Элементы.ГруппаЗакладки.ТекущаяСтраница = Элементы[ВыбранноеЗначение.ИмяСтраницы];
				ОповеститьОВыборе(ВыбранноеЗначение);
			ИначеЕсли ВыбранноеЗначение.Сообщение="ТекстМоделиJSON" Тогда
				ТекстМоделиJSON=ВыбранноеЗначение.Текст;
				ДЗ.ПолучитьЭлементы().Очистить();
				ОбработатьМодельИзСтрокиJSON();
				Модифицированность=Истина;
				СтруктураМодели = ПеребратьОбъектJSON();
				СтруктураМодели=ПолучитьСтруктуруТекущейМодели(СтруктураМодели.config.layers, Путь, 0);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруТекущейМодели(Слои, Путь1, Индекс)
	МассивУзлов = СтрРазделить(Путь1,"/",Ложь);
	Если МассивУзлов.Количество()=0 Или Индекс>МассивУзлов.Количество()-1 Тогда
		ПродолжитьПоиск=Ложь; Искать=ИмяМодели
	Иначе
		ПродолжитьПоиск=Истина; Искать=МассивУзлов[Индекс]
	КонецЕсли;
	Для Каждого Строка Из Слои Цикл
		Если Строка.name=Искать Тогда
			Если ПродолжитьПоиск Тогда
				Возврат ПолучитьСтруктуруТекущейМодели(Строка.config.layers, Путь1, Индекс+1)
			Иначе
				Возврат Строка;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура СлоиПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные=Неопределено Тогда Возврат КонецЕсли;
	Если ВложенныйСлой Тогда
		Элементы.СлоиТренируемый.ТолькоПросмотр = Ложь; 
		ПредставлениеПараметров.Очистить();
		Для Каждого Тексты Из СтруктураМоделиПреобразованная.Параметры.layer.ПараметрыТекст Цикл
			СтрокаП = ПредставлениеПараметров.Добавить();
			СтрокаП.Анг = Тексты.Анг; 
			СтрокаП.Рус = Тексты.Рус; 
		КонецЦикла;
		Возврат
	КонецЕсли;
	Для Каждого СтруктураСлоя Из СтруктураМодели.config.layers Цикл
		Если Элемент.ТекущиеДанные.Имя=СтруктураСлоя.name Тогда
			Элементы.СлоиТренируемый.ТолькоПросмотр = НЕ СтруктураСлоя.config.Свойство("trainable");
			Прервать
		КонецЕсли;
	КонецЦикла;
	
	ПредставлениеПараметров.Очистить();
	Для Каждого СтруктураСлоя Из СтруктураМоделиПреобразованная.Параметры.Слои Цикл
		Если Элемент.ТекущиеДанные.Имя=СтруктураСлоя.Имя Тогда
			Если СтруктураСлоя.Свойство("ПараметрыТекст") Тогда
				Для Каждого Тексты Из СтруктураСлоя.ПараметрыТекст Цикл
					СтрокаП = ПредставлениеПараметров.Добавить();
					СтрокаП.Анг = Тексты.Анг; 
					СтрокаП.Рус = Тексты.Рус; 
				КонецЦикла;
			КонецЕсли;
			Прервать
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ТекстМоделиJSON<>"" Тогда
		ОбработатьМодельИзСтрокиJSON()
	КонецЕсли;
	
	ОтображениеПараметровПриИзменении(Элементы.ОтображениеПараметров);
КонецПроцедуры

&НаКлиенте
Процедура СлоиТренируемыйПриИзменении(Элемент)
	СлоиТренируемыйПриИзмененииНаСервере(Элементы.Слои.ТекущиеДанные.Имя, Элементы.Слои.ТекущиеДанные.Тренируемый);
	//СообщениеВладельцу = Новый Структура;
	//СообщениеВладельцу.Вставить("Сообщение", "ТекстМоделиJSON");
	//СообщениеВладельцу.Вставить("Текст", ТекстМоделиJSON);
	//ОповеститьОВыборе(СообщениеВладельцу);
КонецПроцедуры

&НаСервере
Процедура СлоиТренируемыйПриИзмененииНаСервере(ИмяСлоя, НовоеЗначение)
	СтруктураМодели1 = ПеребратьОбъектJSON();
	Дерево = РеквизитФормыВЗначение("ДЗ");
	СтрокаДерева=Нейро_СозданиеМоделиНаСервере.НайтиТекущийСлойВДеревеНаСервере(Дерево, Путь+?(Путь="","","/")+?(ВложенныйСлой,"",СтруктураМодели.name), ИмяСлоя, "trainable");
	Если ВложенныйСлой Тогда
		СтрокаДерева=Нейро_СозданиеМоделиНаСервере.ПродолжитьПоискСвойстваВложенногоСлояНаСервере(СтрокаДерева.Строки, "trainable");
	КонецЕсли;
	СтрокаДерева.Значение = НовоеЗначение;
	ЗначениеВРеквизитФормы(Дерево,"ДЗ");
	Модифицированность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Модифицированность Тогда
		ТекстМоделиJSON=СформироватьСтрокуJSONИзДереваНаСервере();
		СообщениеВладельцу = Новый Структура;
		СообщениеВладельцу.Вставить("Сообщение", "ТекстМоделиJSON");
		СообщениеВладельцу.Вставить("Текст", ТекстМоделиJSON);
		ОповеститьОВыборе(СообщениеВладельцу);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция СформироватьСтрокуJSONИзДереваНаСервере()
	Дерево = РеквизитФормыВЗначение("ДЗ");
	ТекстМоделиJSON=Нейро_СозданиеМоделиНаСервере.СформироватьСтрокуJSONИзДереваНаСервере(Дерево);
	Возврат ТекстМоделиJSON;
КонецФункции

&НаСервере
Процедура ОбработатьМодельИзСтрокиJSON()
	Дерево = РеквизитФормыВЗначение("ДЗ");
	Нейро_СозданиеМоделиНаСервере.ОбработатьМодельИзСтрокиJSON(ТекстМоделиJSON, Дерево);
	ЗначениеВРеквизитФормы(Дерево,"ДЗ");
	
	//СправочникОбъект = Справочники.Нейро_ПодключенныеМодели.Полу
	//СправочникОбъект = РеквизитФормыВЗначение("Объект");
	//Структуры = СправочникОбъект.ПостроитьДеревоМоделиНаСервере(ТекстМоделиJSON);
	//СтруктураМоделиПреобразованная = Структуры.СтруктураМодели;
	//СправочникОбъект.СформироватьПредставленияПараметров(СтруктураМоделиПреобразованная);
КонецПроцедуры

&НаСервере
Функция ПеребратьОбъектJSON()
	Дерево = РеквизитФормыВЗначение("ДЗ");
	Возврат Нейро_СозданиеМоделиНаСервере.ПеребратьОбъектJSON(Дерево);
КонецФункции

&НаКлиенте
Процедура ОтображениеПараметровПриИзменении(Элемент)
	Если ОтображениеПараметров=0 Тогда
		Элементы.ПредставлениеПараметровРус.Видимость=Истина;
		Элементы.ПредставлениеПараметровАнг.Видимость=Ложь;
		Элементы.СлоиТипСлоя.Видимость=Истина;
		Элементы.СлоиИдСлоя.Видимость=Ложь;
	ИначеЕсли ОтображениеПараметров=1 Тогда
		Элементы.ПредставлениеПараметровРус.Видимость=Ложь;
		Элементы.ПредставлениеПараметровАнг.Видимость=Истина;
		Элементы.СлоиТипСлоя.Видимость=Ложь;
		Элементы.СлоиИдСлоя.Видимость=Истина;
	ИначеЕсли ОтображениеПараметров=2 Тогда
		Элементы.ПредставлениеПараметровРус.Видимость=Истина;
		Элементы.ПредставлениеПараметровАнг.Видимость=Истина;
		Элементы.СлоиТипСлоя.Видимость=Истина;
		Элементы.СлоиИдСлоя.Видимость=Истина;
	КонецЕсли;
КонецПроцедуры
