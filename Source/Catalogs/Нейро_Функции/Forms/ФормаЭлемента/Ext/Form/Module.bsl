
&НаСервере
Процедура ТипПриИзмененииНаСервере()
	ОписаниеТипа = Нейро_ОбщийМодуль.ПолучитьОписаниеТипаИзПеречисления(Объект.Тип);
	Если ОписаниеТипа<>Неопределено Тогда
		Объект.Значение = ОписаниеТипа.ПривестиЗначение(Объект.Значение);
		////Элементы.Значение.ВыбиратьТип = Ложь;
		//Если Объект.Тип=Перечисления.Нейро_Типы.Строка Тогда
		//	Элементы.ПараметрыИд.Видимость = Истина;
		//	Элементы.ПараметрыТип.Видимость = Истина;
		//	Элементы.ПараметрыРасширенныйРежим.Пометка = Истина;
		//Иначе
		//	Элементы.ПараметрыИд.Видимость = Ложь;
		//	Элементы.ПараметрыТип.Видимость = Ложь;
		//	Элементы.ПараметрыРасширенныйРежим.Пометка = Ложь;
		//КонецЕсли;
	Иначе
		Сообщить("Тип не определен: "+СокрЛП(Объект.Тип));
		Объект.Значение = Неопределено;
	КонецЕсли;
	Объект.Параметры.Очистить();
	Объект.Идентификатор = "";
КонецПроцедуры

&НаКлиенте
Процедура ТипПриИзменении(Элемент)
	АдресОписания="";
	ТипПриИзмененииНаСервере();
	СформироватьНаименованиеНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьНаименованиеНаСервере()
	Для Сч=1 По 9999 Цикл
		НовоеНаименование = СокрЛП(Объект.Тип)+" "+СокрЛП(Объект.Значение)+СтрЗаменить(СокрЛП(Сч),Символы.НПП,"");
		УжеЕсть = Справочники.Нейро_Функции.НайтиПоНаименованию(НовоеНаименование);
		Если УжеЕсть.Пустая() Тогда
			Объект.Наименование = НовоеНаименование;
			Возврат;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Список = ПолучитьСпискоПеречислений();
	////Элементы.Тип.СписокВыбора.ДоступныеЗначения=Список;
	//Элементы.Тип.СписокВыбора.Очистить();
	//Для Каждого Элемент Из Список Цикл
	//	Элементы.Тип.СписокВыбора.Добавить(Элемент.Значение)
	//КонецЦикла;
	Если Параметры.Ключ.Пустая() Тогда
		Если Объект.Тип<>Неопределено И Не Объект.Тип.Пустая() Тогда
			ТипПриИзменении(Элементы.Тип);
		КонецЕсли;
		Если Объект.Значение<>Неопределено И Объект.Значение<>"" Тогда
			ЗначениеПриИзменении(Элементы.Значение);
		КонецЕсли;
	КонецЕсли;
	
	ПредставлениеПараметровПриИзменении(Элементы.ПредставлениеПараметров);
	
	ОписаниеПараметра = ПолучитьСтруктуруПараметра(Объект.Значение);
	Если ОписаниеПараметра<>Неопределено Тогда 
		АдресОписания = Нейро_ОбщийМодуль.ПолучитьИдентификаторИзРегистра("СайтДокументации")
		                + ОписаниеПараметра.Адрес;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокПеречислений()
	Результат = Новый СписокЗначений;
	Для Каждого Перечисление Из Перечисления.Нейро_Типы Цикл
		Если Перечисление=Перечисления.Нейро_Типы.Массив
			ИЛИ Перечисление=Перечисления.Нейро_Типы.Функция
			ИЛИ Перечисление=Перечисления.Нейро_Типы.ТипNumPy
			ИЛИ Перечисление=Перечисления.Нейро_Типы.ПорядокКаналов
			ИЛИ Перечисление=Перечисления.Нейро_Типы.VarianceScaling_Распределение
			ИЛИ Перечисление=Перечисления.Нейро_Типы.VarianceScaling_Режим 
			ИЛИ Перечисление=Перечисления.Нейро_Типы.Булево
			ИЛИ Перечисление=Перечисления.Нейро_Типы.Вещественное
			ИЛИ Перечисление=Перечисления.Нейро_Типы.Целое Тогда
			
		Иначе
			Результат.Добавить(Перечисление);
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗначениеПриИзмененииНаСервере()
	Объект.Идентификатор = "";
	Объект.Параметры.Очистить();
	
	АдресОписания = Нейро_ОбщийМодуль.ПолучитьИдентификаторИзРегистра("СайтДокументации");
	
	ОписаниеПараметра = ПолучитьСтруктуруПараметра(Объект.Значение);
	Если ОписаниеПараметра=Неопределено Тогда Возврат КонецЕсли;
	
	АдресОписания = АдресОписания + ОписаниеПараметра.Адрес;
	
	Объект.Идентификатор = ОписаниеПараметра.ИдОбъекта;
	Для Каждого ОписаниеДоп Из ОписаниеПараметра.Доп Цикл
		НовыйПараметр = Объект.Параметры.Добавить();
		НовыйПараметр.Имя = ОписаниеДоп.Рус;
		НовыйПараметр.Ид = ОписаниеДоп.Анг;
		НовыйПараметр.Тип = ОписаниеДоп.Тип;
		ОписаниеТипа = Нейро_ОбщийМодуль.ПолучитьОписаниеТипаИзПеречисления(ОписаниеДоп.Тип);
		Если ОписаниеТипа<>Неопределено Тогда
			НовыйПараметр.Значение = ОписаниеТипа.ПривестиЗначение(НовыйПараметр.Значение);
		//Элементы.ЭлементыСписка.ТекущиеДанные.Значение.ВыбиратьТип = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьСтруктуруПараметра(Значение)
	ОписаниеПараметров = Нейро_ОбщийМодуль.ПолучитьПараметрыИзПеречисленияТипа(Объект.Тип);
	Если ОписаниеПараметров=Неопределено Тогда Возврат Неопределено КонецЕсли;
	Для Каждого СтруктураПараметра Из ОписаниеПараметров Цикл
		Если СтруктураПараметра.Значение = Значение Тогда
			Возврат СтруктураПараметра
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено
КонецФункции

&НаКлиенте
Процедура ЗначениеПриИзменении(Элемент)
	ЗначениеПриИзмененииНаСервере();
	СформироватьНаименованиеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РасширенныйРежим(Команда)
	//Если Элементы.ПараметрыРасширенныйРежим.Пометка Тогда
	//	Элементы.ПараметрыИд.Видимость = Ложь;
	//	Элементы.ПараметрыТип.Видимость = Ложь;
	//	Элементы.ПараметрыРасширенныйРежим.Пометка = Ложь;
	//Иначе
	//	Элементы.ПараметрыИд.Видимость = Истина;
	//	Элементы.ПараметрыТип.Видимость = Истина;
	//	Элементы.ПараметрыРасширенныйРежим.Пометка = Истина;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ДанныеВыбора=ПолучитьСписокПеречислений();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗначениеОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Элементы.Параметры.ТекущиеДанные.Использование = Ложь;
	Элементы.Параметры.ТекущиеДанные.Значение = Неопределено;
	ОписаниеТипа = ПолучитьОписаниеТипаИзПеречисления(Элементы.Параметры.ТекущиеДанные.Тип);
	Если ОписаниеТипа<>Неопределено Тогда
		Элементы.Параметры.ТекущиеДанные.Значение = ОписаниеТипа.ПривестиЗначение(Элементы.Параметры.ТекущиеДанные.Значение);
	Иначе
		Элементы.Параметры.ТекущиеДанные.Значение = Неопределено
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗначениеПриИзменении(Элемент)
	Элементы.Параметры.ТекущиеДанные.Использование = Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьОписаниеТипаИзПеречисления(Тип)
	Возврат Нейро_ОбщийМодуль.ПолучитьОписаниеТипаИзПеречисления(Тип);
КонецФункции

&НаКлиенте
Процедура ПредставлениеПараметровПриИзменении(Элемент)
	Если ПредставлениеПараметров=0 Тогда
		Элементы.ПараметрыИмя.Видимость=Истина;
		Элементы.ПараметрыИд.Видимость=Ложь;
	ИначеЕсли ПредставлениеПараметров=1 Тогда
		Элементы.ПараметрыИмя.Видимость=Ложь;
		Элементы.ПараметрыИд.Видимость=Истина;
	ИначеЕсли ПредставлениеПараметров=2 Тогда
		Элементы.ПараметрыИмя.Видимость=Истина;
		Элементы.ПараметрыИд.Видимость=Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АдресОписанияОткрытие(Элемент, СтандартнаяОбработка)
	Если СокрЛП(АдресОписания)<>"" Тогда
		СтандартнаяОбработка=Ложь;
		НачатьЗапускПриложения(Новый ОписаниеОповещения, АдресОписания);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущиеДанные=Неопределено Тогда Возврат КонецЕсли;
	Если Элемент.ТекущийЭлемент.Имя="ПараметрыЗначение" Тогда
		ОписаниеТипа = Нейро_ОбщийМодуль.ПолучитьОписаниеТипаИзПеречисления(Элемент.ТекущиеДанные.Тип);
		Если ОписаниеТипа<>Неопределено Тогда
			Элемент.ТекущийЭлемент.ОграничениеТипа = ОписаниеТипа;
		Иначе
			Элемент.ТекущийЭлемент.ОграничениеТипа = Новый ОписаниеТипов();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
