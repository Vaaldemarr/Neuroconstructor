
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ТекстМоделиJSON") Тогда
		ТекстМоделиJSON = Параметры.ТекстМоделиJSON;
	КонецЕсли;
	Если СтрДлина(СокрЛП(ТекстМоделиJSON))<2 Тогда 
		Отказ=Истина;
		Возврат
	КонецЕсли;
	Если Лев(ТекстМоделиJSON,1)=Символ(34) И Прав(ТекстМоделиJSON,1)=Символ(34) Тогда
		ЭтоСловарь=Истина;
		Элементы.ФормаПреобразовать.Видимость=Истина;
		Заголовок = "Строка (необходимо преобразование)";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ТекстМоделиJSON<>"" И Не ЭтоСловарь Тогда
		ОбработатьМодельИзСтрокиJSON();
		ЗаполнитьРеквизитыСловаря();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Преобразовать(Команда)
	Состояние("Преобразование...");
	ТекстМоделиJSON1 = Нейро_ОбщийМодуль.ПреобразоватьСтрокуСловаряJSON(ТекстМоделиJSON);
	Если ТекстМоделиJSON1<>"" Тогда
		Состояние("Разбор дерева...");
		Заголовок = "Преобразовано";
		ДЗ.ПолучитьЭлементы().Очистить();
		ТекстМоделиJSON=ТекстМоделиJSON1;
		ЭтоСловарь=Ложь;
		Элементы.ФормаПреобразовать.Видимость=Ложь;
		ОбработатьМодельИзСтрокиJSON();
		ЗаполнитьРеквизитыСловаря();
		Состояние("Завершено");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СтандартнаяОбработка=Ложь;
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = ПутьКСловарю;
	ПутьКФайлу=ПутьКСловарю;
	Поз=СтрНайти(ПутьКФайлу, "\", НаправлениеПоиска.СКонца);
	Если Поз>0 Тогда
		ДиалогОткрытияФайла.Каталог=Лев(ПутьКФайлу, Поз)
	КонецЕсли;
	Фильтр = НСтр("ru = 'JavaScript Object Notation '; en = 'JavaScript Object Notation '")+ "(*.json)|*.json";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = "Укажите имя файла для словаря";	
	
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ОпОп = Новый ОписаниеОповещения("ПослеЗакрытияДиалогаВыбораФайлаСловаря", ЭтотОбъект);
	ДиалогОткрытияФайла.Показать(ОпОп);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДиалогаВыбораФайлаСловаря(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы=Неопределено Тогда Возврат КонецЕсли;
	ПутьКСловарю = ВыбранныеФайлы[0];
	ЗаписьТекста = Новый ЗаписьТекста(ПутьКСловарю, КодировкаТекста.ANSI);
	ЗаписьТекста.Записать(ТекстМоделиJSON);
	ЗаписьТекста.Закрыть();	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыСловаря()
	Строки = ДЗ.ПолучитьЭлементы();
	ЭтоСловарь = Ложь;
	Для Каждого Строка Из Строки Цикл
		Если Строка.Свойство="class_name" И Строка.Значение="Tokenizer" Тогда
			ЭтоСловарь = Истина; Прервать
		КонецЕсли;
	КонецЦикла;
	Если Не ЭтоСловарь Тогда Возврат КонецЕсли;
	СтрокиОбъекта=Неопределено;
	Для Каждого Строка Из Строки Цикл
		Если Строка.Свойство="config" Тогда
			СтрокиОбъекта = Строка.ПолучитьЭлементы(); Прервать
		КонецЕсли;
	КонецЦикла;
	Если СтрокиОбъекта=Неопределено Тогда Возврат КонецЕсли;
	Для Каждого Строка Из СтрокиОбъекта Цикл
		Если Строка.Свойство="filters" Тогда
			Фильтры = Строка.Значение;
		ИначеЕсли Строка.Свойство="lower" Тогда
			НижнийРегистр = Строка.Значение;
		ИначеЕсли Строка.Свойство="split" Тогда
			Разделитель = Строка.Значение;
		ИначеЕсли Строка.Свойство="num_words" Тогда
			РазмерСловаря = Строка.Значение;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Закрывать=Ложь И (Фильтры<>"" Или Разделитель<>"") Тогда
		Отказ=Истина;
		ОписаниеО = Новый ОписаниеОповещения("ПерезакрытьФормуСПараметром", ЭтотОбъект);
		ВыполнитьОбработкуОповещения(ОписаниеО, Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПерезакрытьФормуСПараметром(Результат, ДополнительныеПараметры) Экспорт
	Закрывать=Истина;
	Результат = Новый Структура;
	Результат.Вставить("Фильтры", Фильтры);
	Результат.Вставить("НижнийРегистр", НижнийРегистр);
	Результат.Вставить("Разделитель", Разделитель);
	Результат.Вставить("РазмерСловаря", РазмерСловаря);
	
	Закрыть(Результат);
КонецПроцедуры

&НаСервере
Функция ОбработатьМодельИзСтрокиJSON()
	Дерево = РеквизитФормыВЗначение("ДЗ");
	Нейро_СозданиеМоделиНаСервере.ОбработатьМодельИзСтрокиJSON(ТекстМоделиJSON, Дерево);
	//Сч=0;
	Результат = Ложь;
	Для Каждого Строка Из Дерево.Строки Цикл
		Если НайтиНедопустимыеСимволыXML(Строка.Свойство)>0 Тогда
			Дерево.Строки.Удалить(Строка);
			Результат=Истина;
		КонецЕсли;
		//Сч=Сч+1;
	КонецЦикла;
	ЗначениеВРеквизитФормы(Дерево,"ДЗ");
	Возврат Результат;
КонецФункции

